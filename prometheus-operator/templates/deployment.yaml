apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "prometheus-operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "prometheus-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prometheus-operator.labels" . | nindent 8 }}
    spec:
      containers:
      - name: prometheus-operator
        image: {{ include "prometheus-operator.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - --kubelet-service=kube-system/kubelet
        - --prometheus-config-reloader={{ include "prometheus-operator.configReloaderImage" . }}
        # Config reloader resource limits
        - --config-reloader-cpu-request={{ (((.Values.configReloader.resources).requests).cpu) | default 0 }}
        - --config-reloader-cpu-limit={{ (((.Values.configReloader.resources).limits).cpu) | default 0 }}
        - --config-reloader-memory-request={{ (((.Values.configReloader.resources).requests).memory) | default 0 }}
        - --config-reloader-memory-limit={{ (((.Values.configReloader.resources).limits).memory) | default 0 }}
        env:
        - name: GOGC
          value: "30"
        ports:
        - containerPort: 8080
          name: http
        {{- with .Values.resources }}
        resources:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
        {{- with .Values.containerSecurityContext }}
        securityContext:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        {{- end }}
      automountServiceAccountToken: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 10 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- . | toYaml | nindent 10 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-operator.fullname" . }}
